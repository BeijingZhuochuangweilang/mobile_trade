# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      - name: Shutdown Ubuntu MySQL (SUDO)
        run: sudo service mysql stop # Shutdown the Default MySQL, "sudo" is necessary, please not remove it
      - name: MySQL Action Setup
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306 # Optional, default value is 3306. The port of host
          container port: 3306 # Optional, default value is 3306. The port of container
          mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
          mysql database: 'automation_test' # Optional, default value is "test". The specified database which will be create
          mysql user: 'sysadmin' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
          mysql password: ${{ secrets.DB_PASSWORD}} # Required if "mysql user" exists. The password for the "mysql user"
      - name: Run build-wrapper
        run: |
          docker pull marklion/mt_deploy:v1.0
          docker run -v `realpath .`:`realpath .` marklion/mt_deploy:v1.0 make -f `realpath .`/Makefile
          docker tag marklion/mt_deploy:v1.0 mt_deploy:v1.0
          ip addr show docker0 | grep -Po 'inet \K[\d.]+'
          cur_ip=$(ip addr show docker0 | grep -Po 'inet \K[\d.]+')
          make test db_password=${{ secrets.DB_PASSWORD }} db_host=${cur_ip}
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test_results
          path: |
            build/output.xml
            build/log.html
            build/report.html